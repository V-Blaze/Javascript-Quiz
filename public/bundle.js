/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst User = document.querySelector('.user-name');\r\nconst greeting = document.querySelector('.greet');\r\nconst score = document.querySelector('.score');\r\nconst correctAns = document.querySelector('.correct');\r\nconst wrongAns = document.querySelector('.wrong');\r\nconst totalAns = document.querySelector('.total');\r\nconst questionBox = document.querySelector('.question-box');\r\nconst anserBoxA = document.querySelector('.option-a');\r\nconst anserBoxB = document.querySelector('.option-b');\r\nconst anserBoxC = document.querySelector('.option-c');\r\nconst anserBoxD = document.querySelector('.option-d');\r\nconst optionBoxes = document.querySelectorAll('.q-options');\r\nconst answeredQ = document.querySelector('.answered-q');\r\nconst totalQuiz = document.querySelector('.total-q');\r\nconst quizScore = document.querySelector('.score');\r\nconst QwrongCount = document.querySelector('#wrong');\r\nconst QrightCount = document.querySelector('#right');\r\nconst userName = localStorage.getItem('userName');\r\nlet correct = 0;\r\nlet wrong = 0;\r\nlet totalQ = 20;\r\nlet totalScore = 0;\r\nlet generalTotalScore = Number(localStorage.getItem('totalScore'));\r\nconsole.log(totalScore);\r\nlet answeredQuestion = 0;\r\nconst attemptedQuestions = [];\r\nlet QId;\r\nlet curQuestion = '';\r\nlet curCorrectAns = '';\r\nlet optionA = '';\r\nlet optionB = '';\r\nlet optionC = '';\r\nlet optionD = '';\r\nlet scoreTimeout;\r\n// let levelOne:Array<number> = [0, 1, 2,3, 4, 5, 6,7,8,9,10,\r\n//                                 11,12,13,14,15,16,17,18,19,20,\r\n//                                     21,22,23,24,25]\r\n// const getRandomIndex = (arr: Array<number>):number =>{\r\n//     let index:number = arr[Math.floor(Math.random() * arr.length)];\r\n//     let newArr = arr.splice(index, 1)\r\n//     return index\r\n// }\r\nconst init = () => {\r\n    correctAns.innerText = correct.toString();\r\n    wrongAns.innerText = wrong.toString();\r\n    totalAns.innerText = totalQ.toString();\r\n    score.innerHTML = `Total Score : ${generalTotalScore === null || generalTotalScore === void 0 ? void 0 : generalTotalScore.toString()}`;\r\n};\r\nconst showQuestion = () => {\r\n    questionBox.innerText = curQuestion;\r\n    anserBoxA.innerText = optionA;\r\n    anserBoxB.innerText = optionB;\r\n    anserBoxC.innerText = optionC;\r\n    anserBoxD.innerText = optionD;\r\n};\r\nconst getQuestion = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    const response = yield fetch(\"./question.json\");\r\n    let index = getId();\r\n    // console.log(index, attemptedQuestions)\r\n    try {\r\n        const data = yield response.json();\r\n        const quizQuestion = data[index];\r\n        const { question, options, answer } = quizQuestion;\r\n        curQuestion = question;\r\n        optionA = options.a;\r\n        optionB = options.b;\r\n        optionC = options.c;\r\n        optionD = options.d;\r\n        curCorrectAns = answer;\r\n        // console.log(answer)\r\n        showQuestion();\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n});\r\nconst getPlayerDetails = () => {\r\n    answeredQ.innerText = answeredQuestion.toString();\r\n    totalQuiz.innerText = totalQ.toString();\r\n    quizScore.innerText = totalScore.toString();\r\n    QwrongCount.innerText = `Wrong : ${wrong.toString()}`;\r\n    QrightCount.innerText = `Correct : ${correct.toString()}`;\r\n};\r\nconst runQuiz = () => {\r\n    const controller = new AbortController();\r\n    optionBoxes.forEach((elem) => {\r\n        elem.addEventListener('click', (e) => {\r\n            if (elem.textContent == curCorrectAns) {\r\n                controller.abort();\r\n                // console.log('clicked')\r\n                elem.style.backgroundColor = 'green';\r\n                elem.style.color = 'white';\r\n                elem.innerText = 'CORRECT ANSWER';\r\n                elem.style.transition = '.6s ease-in';\r\n                scoreTimeout = setTimeout(() => {\r\n                    elem.style.backgroundColor = 'aliceblue';\r\n                    elem.style.color = 'black';\r\n                    correctChoice();\r\n                }, 2000);\r\n            }\r\n            else {\r\n                controller.abort();\r\n                elem.style.backgroundColor = 'red';\r\n                elem.style.color = 'white';\r\n                elem.style.transition = '.4s ease-in-out';\r\n                elem.textContent = 'WRONG ANSWER';\r\n                scoreTimeout = setTimeout(() => {\r\n                    wrongChoice();\r\n                    elem.style.backgroundColor = 'aliceblue';\r\n                    elem.style.color = 'black';\r\n                }, 2000);\r\n            }\r\n        }, { signal: controller.signal });\r\n    });\r\n};\r\nconst correctChoice = () => {\r\n    getQuestion();\r\n    runQuiz();\r\n    correct += 1;\r\n    totalScore += 2;\r\n    answeredQuestion++;\r\n    console.log(answeredQuestion);\r\n    answeredQ.innerText = answeredQuestion.toString();\r\n    quizScore.innerText = totalScore.toString();\r\n    QrightCount.innerText = `Correct : ${correct.toString()}`;\r\n    localStorage.setItem('totalScore', totalScore.toString());\r\n    clearTimeout(scoreTimeout);\r\n};\r\nconst wrongChoice = () => {\r\n    getQuestion();\r\n    runQuiz();\r\n    wrong += 1;\r\n    answeredQuestion++;\r\n    answeredQ.innerText = answeredQuestion.toString();\r\n    QwrongCount.innerText = `Wrong : ${wrong.toString()}`;\r\n    clearTimeout(scoreTimeout);\r\n};\r\nconst getId = () => {\r\n    QId = Math.floor(Math.random() * 2);\r\n    // while(attemptedQuestions.includes(QId) && attemptedQuestions.length < 2){\r\n    //     QId = Math.floor(Math.random() * 2)\r\n    // }\r\n    attemptedQuestions.push(QId);\r\n    return QId;\r\n};\r\nconst greet = () => {\r\n    const hour = new Date().getHours();\r\n    if (hour < 12)\r\n        greeting.innerText = 'Good Morning!';\r\n    else if (hour < 18)\r\n        greeting.innerText = 'Good Afternoon!';\r\n    else\r\n        greeting.innerText = 'Good Evening!';\r\n};\r\nif (window.location.pathname == '/public/quiz.html') {\r\n    getQuestion();\r\n    getPlayerDetails();\r\n    runQuiz();\r\n}\r\nif (window.location.pathname == '/public/index.html') {\r\n    init();\r\n    greet();\r\n}\r\nwindow.onload = () => {\r\n    // localStorage.clear();\r\n    if (!userName) {\r\n        console.log('empty');\r\n        window.location.replace('./onboarding.html');\r\n    }\r\n    else {\r\n        User.innerText = `Hello ${userName}`;\r\n    }\r\n};\r\n//the interview part should contain a button that automatically launches qoogle and populates the search item in it...\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.ts"](0, __webpack_exports__);
/******/ 	
/******/ })()
;